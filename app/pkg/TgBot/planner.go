package TgBot

import (
	"cachManagerApp/app/db/models"
	"cachManagerApp/database"
	"fmt"
	"time"

	"github.com/go-co-op/gocron" // –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
func SendNotificationToUser(bot *tgbotapi.BotAPI, chatID int64, userName string) {
	clearName, _ := ClearUserNameFromChatID(chatID)
	if clearName == "" {
		clearName = userName
	}
	message := fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, %s üëã!\n–ù–µ –∑–∞–±—ã–≤–∞–π –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–∏—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã, —á—Ç–æ–±—ã –≤–µ—Å—Ç–∏ –∏—Ö —É—á–µ—Ç üßÆ", clearName)

	// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
	msg := tgbotapi.NewMessage(chatID, message)

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	if _, err := bot.Send(msg); err != nil {
		log.Errorf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 12:00 –ø–æ —Å—Ä–µ–¥–Ω–µ–µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
func ScheduleNotifications(bot *tgbotapi.BotAPI, chatID int64, userName string) {
	// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
	scheduler := gocron.NewScheduler(time.Local) // use local time without timezone

	// scheduler.Cron("*/1 * * * *").Do(func() { // –≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ö—Ä–µ–Ω—å –¥–ª—è —Ç–µ—Å—Ç–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É –ù–ï –£–î–ê–õ–Ø–¢–¨!
	scheduler.Cron("0 12 * * *").Do(func() { // –ë–û–ï–í–ê–Ø –ß–ê–°–¢–¨! —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 12
		SendNotificationToUser(bot, chatID, userName) // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
	})

	// –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞!
	scheduler.StartAsync()
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏–∑ –ë–î
func ClearUserNameFromChatID(chatID int64) (string, error) {
	var user models.Users
	result := database.DB.Where("telegram_id = ?", chatID).First(&user)
	if result.Error != nil {
		return "", result.Error
	}
	fmt.Println(user.Name)
	return user.Name, nil
}
